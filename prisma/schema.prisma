// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String 
  role UserRole
  needPasswordChange Boolean @default(true)
  status UserStatus @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  admin Admin?
  doctor Doctor?

  @@map("users")
}

model Admin {
  id String @id @default(uuid())
  name String
  email String @unique
  profilePhoto String?
  contactNumber String
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [email],references: [email])

  @@map("admins")
}


// schema for doctor 
model Doctor {
  id String @id @default(uuid())
  name String
  email String @unique
  profilePhoto String?
  contactNumber String
  address String?
  registrationNumber String
  experience Int @default(0)
  gender Gender
  appointmentFee Int
  qualification String
  currentWorkingPlace String
  designation String
  // averageRating Int
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [email],references: [email])

  @@map("doctors")

}



// enums --------------------------------
enum UserRole {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum Gender {
  MALE
  FEMALE
}









